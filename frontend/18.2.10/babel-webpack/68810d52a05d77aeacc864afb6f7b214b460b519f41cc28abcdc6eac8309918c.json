{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet TodoService = class TodoService {\n  constructor() {\n    this.storageKey = 'todos';\n    this.todos = [];\n    this.todosSubject = new BehaviorSubject(this.todos);\n    this.nextId = 1;\n    this.loadTodos();\n  }\n  loadTodos() {\n    const todosJson = localStorage.getItem(this.storageKey);\n    if (todosJson) {\n      try {\n        this.todos = JSON.parse(todosJson);\n        // Update nextId based on existing todos\n        if (this.todos.length > 0) {\n          this.nextId = Math.max(...this.todos.map(todo => todo.id)) + 1;\n        }\n        this.todosSubject.next(this.todos);\n      } catch (error) {\n        console.error('Error parsing todos from localStorage', error);\n        this.todos = [];\n        this.nextId = 1;\n        localStorage.removeItem(this.storageKey);\n      }\n    }\n  }\n  saveTodos() {\n    localStorage.setItem(this.storageKey, JSON.stringify(this.todos));\n  }\n  getTodos() {\n    return this.todosSubject.asObservable();\n  }\n  addTodo(title) {\n    const newTodo = {\n      id: this.nextId++,\n      title,\n      isCompleted: false\n    };\n    this.todos.push(newTodo);\n    this.todosSubject.next(this.todos);\n    this.saveTodos();\n  }\n  deleteTodo(id) {\n    this.todos = this.todos.filter(todo => todo.id !== id);\n    this.todosSubject.next(this.todos);\n    this.saveTodos();\n  }\n  toggleCompletion(id) {\n    const todo = this.todos.find(t => t.id === id);\n    if (todo) {\n      todo.isCompleted = !todo.isCompleted;\n      this.todosSubject.next(this.todos);\n      this.saveTodos();\n    }\n  }\n  static {\n    this.ctorParameters = () => [];\n  }\n};\nTodoService = __decorate([Injectable({\n  providedIn: 'root'\n})], TodoService);\nexport { TodoService };","map":{"version":3,"names":["__decorate","Injectable","BehaviorSubject","TodoService","constructor","storageKey","todos","todosSubject","nextId","loadTodos","todosJson","localStorage","getItem","JSON","parse","length","Math","max","map","todo","id","next","error","console","removeItem","saveTodos","setItem","stringify","getTodos","asObservable","addTodo","title","newTodo","isCompleted","push","deleteTodo","filter","toggleCompletion","find","t","ctorParameters","providedIn"],"sources":["/Users/julianboot/Documents/Training/angular-todo-app/angular-todo-app/src/app/services/todo.service.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet TodoService = class TodoService {\n    constructor() {\n        this.storageKey = 'todos';\n        this.todos = [];\n        this.todosSubject = new BehaviorSubject(this.todos);\n        this.nextId = 1;\n        this.loadTodos();\n    }\n    loadTodos() {\n        const todosJson = localStorage.getItem(this.storageKey);\n        if (todosJson) {\n            try {\n                this.todos = JSON.parse(todosJson);\n                // Update nextId based on existing todos\n                if (this.todos.length > 0) {\n                    this.nextId = Math.max(...this.todos.map((todo) => todo.id)) + 1;\n                }\n                this.todosSubject.next(this.todos);\n            }\n            catch (error) {\n                console.error('Error parsing todos from localStorage', error);\n                this.todos = [];\n                this.nextId = 1;\n                localStorage.removeItem(this.storageKey);\n            }\n        }\n    }\n    saveTodos() {\n        localStorage.setItem(this.storageKey, JSON.stringify(this.todos));\n    }\n    getTodos() {\n        return this.todosSubject.asObservable();\n    }\n    addTodo(title) {\n        const newTodo = {\n            id: this.nextId++,\n            title,\n            isCompleted: false,\n        };\n        this.todos.push(newTodo);\n        this.todosSubject.next(this.todos);\n        this.saveTodos();\n    }\n    deleteTodo(id) {\n        this.todos = this.todos.filter((todo) => todo.id !== id);\n        this.todosSubject.next(this.todos);\n        this.saveTodos();\n    }\n    toggleCompletion(id) {\n        const todo = this.todos.find((t) => t.id === id);\n        if (todo) {\n            todo.isCompleted = !todo.isCompleted;\n            this.todosSubject.next(this.todos);\n            this.saveTodos();\n        }\n    }\n    static { this.ctorParameters = () => []; }\n};\nTodoService = __decorate([\n    Injectable({\n        providedIn: 'root'\n    })\n], TodoService);\nexport { TodoService };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,MAAM;AACtC,IAAIC,WAAW,GAAG,MAAMA,WAAW,CAAC;EAChCC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,UAAU,GAAG,OAAO;IACzB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,YAAY,GAAG,IAAIL,eAAe,CAAC,IAAI,CAACI,KAAK,CAAC;IACnD,IAAI,CAACE,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB;EACAA,SAASA,CAAA,EAAG;IACR,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACP,UAAU,CAAC;IACvD,IAAIK,SAAS,EAAE;MACX,IAAI;QACA,IAAI,CAACJ,KAAK,GAAGO,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;QAClC;QACA,IAAI,IAAI,CAACJ,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;UACvB,IAAI,CAACP,MAAM,GAAGQ,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACX,KAAK,CAACY,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC,CAAC,GAAG,CAAC;QACpE;QACA,IAAI,CAACb,YAAY,CAACc,IAAI,CAAC,IAAI,CAACf,KAAK,CAAC;MACtC,CAAC,CACD,OAAOgB,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D,IAAI,CAAChB,KAAK,GAAG,EAAE;QACf,IAAI,CAACE,MAAM,GAAG,CAAC;QACfG,YAAY,CAACa,UAAU,CAAC,IAAI,CAACnB,UAAU,CAAC;MAC5C;IACJ;EACJ;EACAoB,SAASA,CAAA,EAAG;IACRd,YAAY,CAACe,OAAO,CAAC,IAAI,CAACrB,UAAU,EAAEQ,IAAI,CAACc,SAAS,CAAC,IAAI,CAACrB,KAAK,CAAC,CAAC;EACrE;EACAsB,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACrB,YAAY,CAACsB,YAAY,CAAC,CAAC;EAC3C;EACAC,OAAOA,CAACC,KAAK,EAAE;IACX,MAAMC,OAAO,GAAG;MACZZ,EAAE,EAAE,IAAI,CAACZ,MAAM,EAAE;MACjBuB,KAAK;MACLE,WAAW,EAAE;IACjB,CAAC;IACD,IAAI,CAAC3B,KAAK,CAAC4B,IAAI,CAACF,OAAO,CAAC;IACxB,IAAI,CAACzB,YAAY,CAACc,IAAI,CAAC,IAAI,CAACf,KAAK,CAAC;IAClC,IAAI,CAACmB,SAAS,CAAC,CAAC;EACpB;EACAU,UAAUA,CAACf,EAAE,EAAE;IACX,IAAI,CAACd,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC8B,MAAM,CAAEjB,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;IACxD,IAAI,CAACb,YAAY,CAACc,IAAI,CAAC,IAAI,CAACf,KAAK,CAAC;IAClC,IAAI,CAACmB,SAAS,CAAC,CAAC;EACpB;EACAY,gBAAgBA,CAACjB,EAAE,EAAE;IACjB,MAAMD,IAAI,GAAG,IAAI,CAACb,KAAK,CAACgC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACnB,EAAE,KAAKA,EAAE,CAAC;IAChD,IAAID,IAAI,EAAE;MACNA,IAAI,CAACc,WAAW,GAAG,CAACd,IAAI,CAACc,WAAW;MACpC,IAAI,CAAC1B,YAAY,CAACc,IAAI,CAAC,IAAI,CAACf,KAAK,CAAC;MAClC,IAAI,CAACmB,SAAS,CAAC,CAAC;IACpB;EACJ;EACA;IAAS,IAAI,CAACe,cAAc,GAAG,MAAM,EAAE;EAAE;AAC7C,CAAC;AACDrC,WAAW,GAAGH,UAAU,CAAC,CACrBC,UAAU,CAAC;EACPwC,UAAU,EAAE;AAChB,CAAC,CAAC,CACL,EAAEtC,WAAW,CAAC;AACf,SAASA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}